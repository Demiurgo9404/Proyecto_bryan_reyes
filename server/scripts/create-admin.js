const { User } = require('../models');
const bcrypt = require('bcryptjs');

async function createAdminUser() {
  try {
    // Verificar si ya existe un administrador
    const existingAdmin = await User.findOne({ 
      where: { email: 'admin@loverose.com' } 
    });

    if (existingAdmin) {
      if (existingAdmin.role !== 'admin') {
        console.log('üîß El usuario administrador existe pero tiene un rol incorrecto. Actualizando...');
        existingAdmin.role = 'admin';
        await existingAdmin.save();
        console.log('‚úÖ Rol del administrador actualizado a "admin".');
      } else {
        console.log('‚úÖ El usuario administrador ya existe con el rol correcto.');
      }
      console.log(`   Email: ${existingAdmin.email}`);
      return;
    }

    // Crear el usuario administrador
    const adminData = {
      name: 'Administrador',
      email: 'admin@loverose.com',
      password: 'Admin123!', // Contrase√±a por defecto
      role: 'admin',
      isActive: true,
      isVerified: true,
    };

    // Hashear la contrase√±a
    const salt = await bcrypt.genSalt(10);
    adminData.password = await bcrypt.hash(adminData.password, salt);

    // Crear el usuario
    const admin = await User.create(adminData);

    console.log('‚úÖ Usuario administrador creado exitosamente');
    console.log('\nüîë Credenciales de acceso:');
    console.log(`   Email: ${admin.email}`);
    console.log(`   Contrase√±a: Admin123!`);
    console.log('\n‚ö†Ô∏è IMPORTANTE: Cambia esta contrase√±a despu√©s de iniciar sesi√≥n.');
    
  } catch (error) {
    console.error('‚ùå Error al crear el usuario administrador:');
    console.error(error.message);
    
    if (error.name === 'SequelizeUniqueConstraintError') {
      console.log('\nüí° Ya existe un usuario con ese correo electr√≥nico.');
    }
    
    console.log('\nPosibles soluciones:');
    console.log('1. Verifica que la base de datos est√© en ejecuci√≥n');
    console.log('2. Aseg√∫rate de que las migraciones est√©n ejecutadas');
    console.log('3. Revisa los logs de error para m√°s detalles');
  } finally {
    process.exit();
  }
}

// Ejecutar la funci√≥n principal
console.log('üîç Iniciando creaci√≥n de usuario administrador...');
createAdminUser();
